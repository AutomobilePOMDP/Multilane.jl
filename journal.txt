Wed 25 Apr 2018 10:40:56 AM PDT

true and 0.75
data/gap_Wednesday_25_Apr_07_30.csv

Tue 24 Apr 2018 08:14:46 PM PDT

Results for nocor
data/gap_Tuesday_24_Apr_20_07.csv

Tue 24 Apr 2018 03:23:48 PM PDT

changed to no particle noise for uniform filter

Tue 24 Apr 2018 03:15:33 PM PDT

0.75 cor
data/uncor_gap_Monday_23_Apr_18_19.csv

Mon 23 Apr 2018 03:45:55 PM PDT

[ ] Debug mean
    [X] See if mean works with the uniform filter on 0.75 (NO)
    [ ] compare individual simulations of meanmpc with uniform and agg filters
[ ] Try outcome only

Fri 20 Apr 2018 07:16:38 PM PDT

Simulating... 62%|████████████████████████              |  ETA: 0:08:56 From worker 45: car_j.x = 18.910574890289986
        From worker 45: car_i.x = 23.5501036490487
        From worker 45: car_j.x + dxs[j] = 33.94027537796539
        From worker 45: car_i.x + dxs[i] = 35.153518985228885
        From worker 45: pp.l_car = 4.0
        From worker 45: Conflict because of noise: front:3, back:5
        From worker 45: saving debug args to /tmp/julianVjRXH.jld
Simulating... 62%|████████████████████████              |  ETA: 0:08:53WARNING: Error in Simulation
        From worker 45: sim.metadata[:rng_seed] = 41247
Car nudged because of crash.    From worker 45: saving debug hist to /tmp/julia3TreUM.jld

Fri 20 Apr 2018 05:56:34 PM PDT

front id: 37;
back id: 39

From worker 52: Conflict because of noise: front:3, back:5
From worker 52: saving debug args to /tmp/juliazv8xuq.jld
WARNING: Error in Simulation
Car nudged because of crash.    From worker 52: saving debug hist to /tmp/juliaAKPG0b.jld

Fri 20 Apr 2018 01:31:00 PM PDT

Debugging crash
From worker 5:  car_j.x = 18.9105
74890289986
        From worker 5:  car_i.x = 23.5501036490487
        From worker 5:  car_j.x + dxs[j] = 33.94027537796539
        From worker 5:  car_i.x + dxs[i] = 35.153518985228885
        From worker 5:  pp.l_car = 4.0
lambda = 0.5, meanmpc
/tmp/juliaIrxQaX.jld


Fri 20 Apr 2018 10:49:28 AM PDT

[ ] uncor
[ ] parcor with other filter
[ ] outcome uncertainty


Fri 20 Apr 2018 10:23:07 AM PDT

added partially correlated results 
data/parcor_gap_Friday_20_Apr_02_39.csv

Thu 19 Apr 2018 08:33:56 PM PDT

Changed so new cars generated based on sp instead of s!!

Thu 19 Apr 2018 08:07:01 PM PDT

Debugging crash
car_j.x = 12.738286961794964
car_i.x = 16.8433083124826
car_j.x + dxs[j] = 36.17517816643702
car_i.x + dxs[i] = 30.587350751577564
pp.l_car = 4.0
Conflict because of noise: front:2, back:6
/tmp/juliaBVJiMr.jld

Car 2 did a negative lane change into car 6s lane

Thu 19 Apr 2018 01:02:10 PM PDT

[ ] focus on 0.75

Thu 19 Apr 2018 12:51:35 PM PDT

meanmpc for correlated
cor_gap_Thursday_19_Apr_12_49.csv

Thu 19 Apr 2018 10:40:17 AM PDT

results from running correlated omniscient with 10k simulations
data/cor_gap_Thursday_19_Apr_00_14.csv

Wed 18 Apr 2018 05:49:29 PM PDT

[ ] Get all correlated results

correlated + halfway through 0.75
/tmp/all_gaps_checkpoint_Wednesday_18_Apr_16_38.csv

Wed 18 Apr 2018 05:39:58 PM PDT

crash in baseline at cor 0.75, lambda = 2.0

Wed 18 Apr 2018 11:23:51 AM PDT

[X] Look at more_iters and see if it is good enough
Looks good enough

Wed 18 Apr 2018 10:33:03 AM PDT

The 5k sims test seems to have stalled
/tmp/all_gaps_checkpoint_Tuesday_17_Apr_19_19.csv

Wed 18 Apr 2018 10:20:36 AM PDT

cross entropy for omniscient
iteration 22
mean(d) = [8.04951, 4.49361, 10.7003]
det(cov(d)) = 0.005685112203029496
ev = eigvals(cov(d)) = [0.00245582, 1.0348, 2.23711]
(eigvecs(cov(d)))[:, j] = [-0.0265389, -0.920364, 0.390162]
(eigvecs(cov(d)))[:, j] = [0.782263, -0.262122, -0.565117]
(eigvecs(cov(d)))[:, j] = [0.622383, 0.290212, 0.726923]
creating 60 simulation sets............................................................
Simulating...100%|██████████████████████████████████████| Time: 0:28:16
mean(combined[:mean_reward]) = 0.34184144918572895

Tue 17 Apr 2018 02:06:08 PM PDT

pomcpow winning on correlated not fixed by 5k sims
run with more iterations?
optimize parameters?


Tue 17 Apr 2018 10:50:04 AM PDT

Problems...
pomcpow_winning_on correlated
nonconvexity on 0.75 (eliminate lambda = 8)
mlmpc worse than baseline

run with 5k
use meanmpc on uncorrelated?

Mon 16 Apr 2018 11:31:47 PM PDT

last before switching to lv_resample /tmp/all_gaps_checkpoint_Monday_16_Apr_23_12.csv
copied to data

Mon 16 Apr 2018 05:28:01 PM PDT

mlmpc beats baseline here
/home/zsunberg/.julia/v0.6/Multilane/data/all_gaps_Monday_16_Apr_15_05.csv

Fri 13 Apr 2018 10:26:52 AM PDT

first after fixing initialize_belief fix

zsunberg@bethpage:~/.julia/v0.6/Multilane$ julia -p 54 scratch/twogaps_cweights.jl
N = 2000 = 2000
n_iters = 1000 = 1000
max_time = Inf = Inf
max_depth = 40 = 40
val = SimpleSolver() = Multilane.SimpleSolver()
/home/zsunberg/.julia/v0.6/Multilane/data/all_gaps_Friday_13_Apr_10_17.csv

Fri 06 Apr 2018 10:53:04 PM PDT

[X] Car colors
[X] tree dots
[X] Car colors not just dependent on v0

Thu 05 Apr 2018 11:24:33 AM PDT

gaps with N=2000 old filter
all_gaps_Thursday_5_Apr_00_53.csv

Wed 04 Apr 2018 02:36:40 PM PDT

Running on jodhpur with N=2000 with old filter

Wed 04 Apr 2018 02:18:48 PM PDT

data/cor_trend_Tuesday_3_Apr_20_35.csv
This looks pretty good for a final correlation trend plot

Wed 04 Apr 2018 02:07:24 PM PDT

Run curves with old particle filter and N=2000

Wed 04 Apr 2018 01:19:38 PM PDT

data/all_gaps_Wednesday_4_Apr_04_20.csv
The particle filter upgrade DID NOT WORK Need to run with old and 2k sims or FIX

Tue 03 Apr 2018 05:03:05 PM PDT

[ ] make it so that lane termination only happens if it's not dangerous

Tue 03 Apr 2018 03:56:30 PM PDT

cweight speed results for 100 step sim with trivial policy; 5k particles
weights: 38.7 seconds
cweights: 21 seconds

10k particles
cweights 44 seconds

Tue 03 Apr 2018 01:44:19 PM PDT

Lots of problems:
Most of these problems are with MLMPC, so perhaps better filtering will fix:
UPGRADE TO EFFICIENT FILTERS
[X] Use cweights
[O] Use low variance resampling for outer loop

Tue 03 Apr 2018 01:37:14 PM PDT

allgaps

zsunberg@jodhpur:~/.julia/v0.6/Multilane$ julia -p 54 scratch/allgaps.jl
N = 1000 = 1000
n_iters = 1000 = 1000
max_time = Inf = Inf
max_depth = 40 = 40
val = SimpleSolver() = Multilane.SimpleSolver()
Writing data to /home/zsunberg/.julia/v0.6/Multilane/data/all_gaps_Monday_2_Apr_21_34.csv

Tue 03 Apr 2018 10:57:00 AM PDT

Need to add min speed termination

Tue 03 Apr 2018 10:31:33 AM PDT

correlation trend with N=5000
Writing data to /home/zsunberg/.julia/v0.6/Multilane/data/cor_trend_Tuesday_3_Apr_07_20.csv

Mon 02 Apr 2018 09:26:58 PM PDT

zsunberg@bethpage:~/.julia/v0.6/Multilane$ julia -p 54 scratch/correlation_trend.jl
N = 1000 = 1000
n_iters = 1000 = 1000
max_time = Inf = Inf
max_depth = 40 = 40
val = SimpleSolver() = Multilane.SimpleSolver()
Writing data to /home/zsunberg/.julia/v0.6/Multilane/data/cor_trend_Monday_2_Apr_19_49.csv

Mon 02 Apr 2018 04:58:23 PM PDT

do correlation trend

Mon 02 Apr 2018 02:53:33 PM PDT

zsunberg@jodhpur:~/.julia/v0.6/Multilane$ julia -p 54 scratch/allgaps.jl
N = 500 = 500
n_iters = 1000 = 1000
max_time = Inf = Inf
max_depth = 40 = 40
val = SimpleSolver() = Multilane.SimpleSolver()
Writing data to /home/zsunberg/.julia/v0.6/Multilane/data/baseline_curve_Monday_2_Apr_14_49.csv

Mon 02 Apr 2018 12:37:11 PM PDT

Expected runtime for allgaps
30 minutes per point x 5 points x 4 solvers x 3 cors = 30 hours.
Lower to 1000 iters, 500 sims ~= 1.5 hours

Mon 02 Apr 2018 12:28:41 PM PDT

Realized that allgaps mistakenly uses the optimistic heuristic - re-running

Mon 02 Apr 2018 11:24:45 AM PDT

zsunberg@jodhpur:~/.julia/v0.6/Multilane$ julia -p 54 scratch/allgaps.jl
N = 1000 = 1000
n_iters = 10000 = 10000
max_time = Inf = Inf
max_depth = 40 = 40
val = OptimisticValue() = Multilane.OptimisticValue()

/home/zsunberg/.julia/v0.6/Multilane/data/baseline_curve_Sunday_1_Apr_02_18.csv

Sat 31 Mar 2018 10:07:38 PM PDT

With 20000 iters and value... weird
Writing data to /home/zsunberg/.julia/v0.6/Multilane/data/baseline_curve_Saturday_31_Mar_19_03.csv

Sat 31 Mar 2018 10:06:50 PM PDT

Reproduction with lambda = 0: you can't get less than 13.8 seconds
zsunberg@bethpage:~/.julia/v0.6/Multilane$ julia -p 54 scratch/reproduce.jl 
N = 500 = 500
n_iters = 500 = 500
max_time = Inf = Inf
max_depth = 20 = 20
val = SimpleSolver() = Multilane.SimpleSolver()
lambda = 0.0
k = "mlmpc"
Simulating...100%|██████████████████████████████████████| Time: 0:01:08
extrema(data[:time_to_lane]) = (4.5, 36.75)
mean(data[:time_to_lane]) = 15.2745
mean(data[:nb_brakes]) = 0.69
extrema(data[:init_n_cars]) = (4, 7)
mean(data[:init_n_cars]) = 5.618
mean(data[:mean_search_time]) = 0.2510736670276966
mean(data[:reward]) = 0.4020048199087055
minimum(data[:min_speed]) = 0.09838861831921974
k = "baseline"
Simulating...100%|██████████████████████████████████████| Time: 0:01:14
extrema(data[:time_to_lane]) = (4.5, 248.25)
mean(data[:time_to_lane]) = 18.4035
mean(data[:nb_brakes]) = 0.628
extrema(data[:init_n_cars]) = (4, 7)
mean(data[:init_n_cars]) = 5.618
mean(data[:mean_search_time]) = missing
mean(data[:reward]) = 0.4104719448438347
minimum(data[:min_speed]) = 0.0870830254537509
k = "omniscient"
Simulating...100%|██████████████████████████████████████| Time: 0:00:46
extrema(data[:time_to_lane]) = (4.5, 43.5)
mean(data[:time_to_lane]) = 13.8465
mean(data[:nb_brakes]) = 0.612
extrema(data[:init_n_cars]) = (4, 7)
mean(data[:init_n_cars]) = 5.618
mean(data[:mean_search_time]) = 0.24905548593471075
mean(data[:reward]) = 0.43650107055018406
minimum(data[:min_speed]) = 3.5155584119643777
Writing data to /home/zsunberg/.julia/v0.6/Multilane/data/reproduction_Saturday_31_Mar_18_42.csv

Sat 31 Mar 2018 06:36:44 PM PDT

Attempt at reproduction
/home/zsunberg/.julia/v0.6/Multilane/data/reproduction_Saturday_31_Mar_18_32.csv

Sat 31 Mar 2018 05:16:24 PM PDT

Unable to reproduce the old results with the current reward function

Sat 31 Mar 2018 04:52:43 PM PDT

Got nb_brakes of .4; ttl of 17 with reward of 1; switching to reward 10

Sat 31 Mar 2018 04:46:38 PM PDT

In reproducing results got nb_brakes of like 0.07 and ttl of like 28 with reward of 1
^ Noticed that this was because I was using a SuccessReward

Sat 31 Mar 2018 03:59:33 PM PDT

Tried to reproduce results... saw no brakes and ttl of 5.7 with lane reward 1
^ this was because I set lane_length to 0.75


Sat 31 Mar 2018 09:27:13 PM PDT

Shoot - gotta run it without pomcpow because I don't have an uncorrelated sr belief updater


Sat 31 Mar 2018 01:25:54 PM PDT

[O] run fully-correlated with value to compare with rollout
[O] repeat acc results
[ ] get rho = 0.0 working
[ ] run rho = 0.75 for plot
[ ] run rho = 0.0 for plot
[ ] run correlation trend

Fri 30 Mar 2018 05:27:22 PM PDT

Big iter parity? (not promising)
zsunberg@jodhpur:~/.julia/v0.6/Multilane$ julia -p 54 scratch/gap_iter_parity.jl
N = 1000 = 1000
n_iters = 10000 = 10000
max_time = Inf = Inf
max_depth = 40 = 40

/home/zsunberg/.julia/v0.6/Multilane/data/baseline_curve_Friday_30_Mar_13_36.csv


Fri 30 Mar 2018 05:19:12 PM PDT

gap_500.jl
Writing data to /home/zsunberg/.julia/v0.6/Multilane/data/baseline_curve_Friday_30_Mar_16_27.csv

Fri 30 Mar 2018 12:16:10 PM PDT

Things that I could do

[ ] Adjust reward functions
[ ] Do cross-entropy
[X] Work on parallel
[0] Value instead of rollout
[1] Do correlation study
[ ] Non-aggressiveness filter

Fri 30 Mar 2018 09:36:59 AM PDT

with fully-corellated

/home/zsunberg/.julia/v0.6/Multilane/data/baseline_curve_Friday_30_Mar_07_36.csv

Thu 29 Mar 2018 03:26:12 PM PDT

Need to keep track of the average number of iters *ON THE FIRST STEP*

Wed 28 Mar 2018 09:11:16 PM PDT

gap with new qmdp
Writing data to /home/zsunberg/.julia/v0.6/Multilane/data/baseline_curve_Wednesday_28_Mar_16_55.csv

Tue 27 Mar 2018 12:53:59 PM PDT

With lots of comutation:
    
    "pomcpow" => POMCPOWSolver(tree_queries=10_000_000,
                               criterion=MaxUCB(2.0),
                               max_depth=40,
                               max_time=20.0,
                               enable_action_pw=false,
                               k_observation=4.0,
                               alpha_observation=1/8,
                               estimate_value=FORollout(SimpleSolver()),
                               check_repeat_obs=false,
                               node_sr_belief_updater=AggressivenessPOWFilter(wup)
                              )


zsunberg@bethpage:~/.julia/v0.6/Multilane$ julia -p 54 scratch_18_03/long_compute.jl
N = 2000 = 2000
lambda = 1.0
k = "pomcpow"
Simulating...100%|██████████████████████████████████████| Time: 4:40:09
% reaching: 97.2; % braking:  3.8
extrema(data[:distance]) = (141.58465389163146, 1038.654002736081)
mean(data[:mean_iterations]) = 53012.58754853618
k = "omniscient"
Simulating...100%|██████████████████████████████████████| Time: 0:16:58
% reaching: 80.1; % braking:  1.1
extrema(data[:distance]) = (140.8302636907952, 1032.1174082929251)
mean(data[:mean_iterations]) = 10113.634496570035
Writing data to /home/zsunberg/.julia/v0.6/Multilane/data/baseline_curve_Monday_26_Mar_23_54.csv

This is much better...
Need to optimize parameters I suppose

Fri 23 Mar 2018 01:25:54 PM PDT

- Store particles by car? Yes
- Aggressiveness? Yes

Tue 20 Mar 2018 10:37:28 AM PDT

[X] Curve with baseline
[ ] Plot baseline curve
[X] Quick profile
[X] Curve with upper bound
[/] Curve with MLMPC
[/] Curve with PFT-DPW

Mon 19 Mar 2018 06:23:30 PM PDT

Resurrection

[X] Figure out how to run with assume normal solver


Wed 18 Jan 2017 01:40:01 PM PST

[ ] Add Correlation metric

plot

finished triangular (but sometimes an error seems to happen)
running scratch/correlation_trend.jl

Fri 13 Jan 2017 05:20:08 PM PST

Interface for behavior model
max_accel
gen_action returns a multilane action

Thu 12 Jan 2017 10:05:45 PM PST

Working on failure_6 in test_actions

Mon 09 Jan 2017 06:17:22 PM PST

working on src/debug.jl to debug triangular distribution

Wed 23 Nov 2016 03:55:19 PM PST

[ ] run correlation_trend.jl on sherlock
[ ] fix the noise

Tue 01 Nov 2016 12:18:57 PM PDT

[ ] get correlation_trend.jl to run and then run it on sherlock

Fri 14 Oct 2016 11:07:04 AM PDT

make an x=correlation y=fraction success graph

Tue 27 Sep 2016 07:29:58 PM PDT

[ ] Create success/failure problem
    Ends after T seconds or when lane is reached or when braking more than 4m/s^2
    +1 reward if transition into target lane
    
    

BAD THINGS
env_cars instead of cars

Fri 26 Aug 2016 08:05:02 PM PDT

[X] Automatic newest filename
[ ] Continuous behaviors
[ ] Run gap study

Tue 16 Aug 2016 10:31:52 PM PDT

[ ] do a quick profile with rerun

Tue 16 Aug 2016 10:12:10 PM PDT

[ ] Look at results aug 16 20 31

Sat 13 Aug 2016 10:48:57 AM PDT

[X] State num overlay
[X] Car ID Overlay
[ ] Debug braking

Thu 11 Aug 2016 05:50:20 PM PDT

Overlays:
[O] crash
[X] Hello World
[X] hard brake
[O] behavior type

Thu 11 Aug 2016 09:33:51 AM PDT

[X] rename :eval_problem_key to :problem_key in stats
[X] rename :soln_problem_key to :solver_problem_key
[X] record test_set_key in stats

Wed 10 Aug 2016 09:43:55 AM PDT

[X] separate parameters by product and non-product

Wed 27 Jul 2016 11:03:03 AM PDT

Maybe the reason why there are so many brakes is because of the randomness in the acceleration

Mon 25 Jul 2016 01:08:09 PM PDT

[Y] All simulations are of the pomdp???
    No, because of the upper bound
    What we actually need is to verify that the POMDP and MDP produce the same thing
    Yes, should just make fully observable version - still won't handle the fact that observations might mess up the random number sequence
    Maybe generate a dummy observation to deal with the random alignment
    
[ ] Implement POMDP framework and start to run it
[O] Add action playback policy to POMDPToolbox
[O] Write tests to verify that POMDP and MDP are equivalent

Sat 16 Jul 2016 03:38:04 PM PDT

Reducing the number of brakes
Random solver:
    With appear_clearance = 20
        nb_brakes = 31.94
        time_to_lane = 198.01
        ratio = 0.16
    With dynamic clearance
        nb_brakes = 28.91
        time_to_lane = 203.4
        ratio = 0.14
SimpleSolver:
    With appear_clearance = 20
        nb_brakes = 3.369
        time_to_lane = 15.56
        ratio = 0.217
    With dynamic clearance
        nb_brakes = 2.966
        time_to_lane = 13.8697
        ratio = 0.214

Doesn't look like it's happening when new cars are generated

back to clearance = 20
tried to change aggressive b to 1.8
    heuristic ratio = 0.217
    random ratio = 0.164

tried to change threshold to 2.5
    heuristic ratio = 0.168
    random ratio = 0.117

Thu 14 Jul 2016 11:24:02 AM PDT

Local Theresa Speed Tests
with 7 cores: 2:52
with 4 cores: 4:13

Thu 14 Jul 2016 10:52:30 AM PDT

Timing test:
with 38 cores: 11:50 Progress meter time
with 20 cores: 14.59 Progress meter time (but a lot of the end was with only one core running)

Wed 13 Jul 2016 02:38:32 PM PDT

[ ] Run tests on tula with changes
[ ] Think about whether I need different solvers
[ ] Read up on literature for doing this exact task
[O] Program a really aggressive heuristic (the simple one is pretty aggressive now)
[ ] Work on POMCP dpw

[ ] XXX Cars do not seem to be braking to avoid the ego

[ ] Change no_crash_model:217 to < 0.0

Tue 12 Jul 2016 11:32:45 AM PDT

[X] Debugging a crash - results_Jul_12_11_17.jld, 154
     -  Another blue car changes lanes right into the ego
    [X] Print the car id in the visualization
    [X] Write a debugging script
     - TWO PROBLEMS
        [X] blue car ignores the ego car (MOBIL.jl:128)
        [X] Why does the ego not slam on its brakes?
            i.e. why is sim.action_hist[5] not in actions(problem, sim.action_hist[5])?
            Answer: because the Simple heuristic does not emergency brake

Thu 07 Jul 2016 12:27:33 PM PDT

[O] Get a robust curve
    [X] Figure out which simulations are taking so long (on local)
        - All robust are taking a long time
    [X] Write a script that just runs the first one
        - It appears that the planner is just too scared
    [X] Verify that it is too scared
        - Actually, it just doesn't do anything - so there is a bug somewhere

Mon 04 Jul 2016 03:19:40 PM PDT

[X] Start simulation with robust
[ ] investigate crash

Fri 01 Jul 2016 10:41:40 AM PDT

[X] Start a simulation with 2.0 m/s
[X] flush in pmapprogressmeter
[X] Get robust working
[X] Start a simulation with high discount

Wed 29 Jun 2016 05:36:27 PM PDT

[X] check that lane_change is in lanes per second
    [X] what is y_interval?
         -  plotting is dependent on it - in plotting carstate.y*y_interval is the y location
        [X] why is there also w_lane? They are both 4. by default
        [X] Replace y_interval by w_lane? YES
    [ ] what should the lane change rate be?
    [X] get rid of rationality? I don't understand it, so YES
[X] plot histogram of time to lane
[ ] implement robust
[ ] split into generating problems/initial conditions and running solvers

Wed 29 Jun 2016 02:58:46 PM PDT

[X] plot just the important ones
[X] get logsim over to tula
[O] Figure out how to rerun with new solvers
[O] rerun with new solvers
[X] Make an update for Mykel
    [X] Generate a set of curves
    [X] Describe challenges

Mon 27 Jun 2016 02:15:09 PM PDT

The policy is just doing really dumb stuff

Fri 24 Jun 2016 07:51:20 PM PDT

I want to be able to investigate a simulation
I HATE IPYTHON NOTEBOOKS
First, get initial conditions, then do test_run
But, if I want to examine the tree, I have to have the policy
so test_run should return the policy
should be able to visualize with that
PUT AS LITTLE CODE AS POSSIBLE IN THE DAMN NOTEBOOK

Fri 24 Jun 2016 06:45:36 PM PDT

[ ] Simulation visualization

Thu 23 Jun 2016 09:38:46 PM PDT

Tonight:
    [X] Travel
Friday:
    [X] End at lane reached
    [ ] Robust Running
Saturday: 
    [ ] Profile

Thu 23 Jun 2016 07:48:20 PM PDT

[ ] FIGURE OUT WHAT REALISTIC PARAMETERS ARE

Thu 23 Jun 2016 02:25:27 PM PDT

[X] Plot
[ ] Profile
[ ] Run Robust
[ ] Investigate bugs
    [ ] Crashes
    [ ] Run until lane reached

[ ] Travel Reimbursement

Tue 21 Jun 2016 01:55:31 PM PDT

[X] Fix framework
[X] Run on Theresa
[X] Run on tula
[ ] Clean up
[ ] Graph

Mon 20 Jun 2016 09:57:17 PM PDT

[ ] XXX Can't cars just speed over to the desired lane before any others get there?

Sat 04 Jun 2016 12:56:27 PM PDT

[-] Upgrade to dataframes
[X] Use heuristic policy
[X] Increase max lambda
[X] Fewer Lambdas
[X] Extract number of hard brakes
[X] Extract time to lane


Potential Caveats:
1. These numbers are not realistic (Chris and I don't know what parameter values to use)
2. We need a sophisticated driver model

THU 12 MAY 2016 09:00:14 AM PDT

[ ] ROBUST MONTE CARLO TREE SEARCH
[ ] DATA STRUCTURE FOR A SIMULATION ROUND

SAT 07 MAY 2016 03:24:01 PM PDT

[X] PROFILE
[X] DO RANDOM
[X] NORWAY
[X] TRY DPW
[X] SET UP TULA
[O] FIGURE OUT AGGREGATION

FRI 06 MAY 2016 05:12:57 PM PDT

[X] ADD CAR ID
[ ] DO MCTS EVEN THOUGH IT DOESN'T WORK

FRI 06 MAY 2016 10:13:49 AM PDT

[X] BRAKING THRESHOLD POSITIVE NUMBER!
[X] GET RID OF DEBUGGING
[ ] SPEED ADJUSTMENTS SHOULD BE SLOW

THU 05 MAY 2016 11:01:47 AM PDT

[X] WHY IS THE VISUALIZATION PRODUCING TWO PLOTS?
[X] WHY ARE CARS STARTING IN ALL THE WRONG PLACES?
[X] WHY AREN'T CARS REGENERATING
[X] WHY IS IT TAKING ACTIONS TO GO OFF THE ROAD

WED 04 MAY 2016 06:07:53 PM PDT

[X] NEED TO DEFINE WHAT LANE_CHANGE IS

TUE 03 MAY 2016 06:35:47 PM PDT

WHY COMPLICATED TESTINg?
what is idx in behavior model
change strings to symbols in cautious/normal/aggressive
lane_change meaning in action vs other cars
[X] Goals for tomorrow
    [X] Make decision about dynamics
    [X] ZOH acceleration - start braking assumption at 1g
    [X] Run simulation with random policy
    [X] Julia sorting reverse

Tue 03 May 2016 03:05:13 PM PDT

[X] lane change snap

Mon 02 May 2016 05:10:10 PM PDT

[X] Read on the line of literature from the foundations paper
[X] define spawn model
[X] code spawn model

Sat 23 Apr 2016 09:28:51 PM PDT

Need to define
- encounter
- continuous time/ acceleration
- dvel_*ms*
- rationality

Fri 22 Apr 2016 11:54:49 AM PDT

Before quick crash test pruning: 4.7 seconds
After: 2 seconds (2 x speedup)

Fri 22 Apr 2016 11:26:08 AM PDT

Things to adjust:
[O] Cost function
[ ] Move crash testing from dynamics to action space
[ ] generate_sr tests for close calls

First thing to test:
[ ] Random policy vs MCTS with perfect state knowledge

Thu 21 Apr 2016 01:47:20 PM PDT

[X] test if crashed in state transition
    This give about a 2x speedup in rollout simulation, see scratch/simlog_faster_crash.md
[X] update reward
[X] update isterminal

Mon 18 Apr 2016 08:18:04 PM PDT

visualization
history simulator
